'\"
'\" Copyright (c) 1990-1994 The Regents of the University of California.
'\" Copyright (c) 1994-1995 Sun Microsystems, Inc.
'\" Copyright (c) 1996-1999 Christian Werner
'\"
'\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" 
.so man.macros
.TH button n 8.0 Ck "Ck Built-In Commands"
.BS
'\" Note:  do not modify the .SH NAME line immediately below!
.SH NAME
button \- Create and manipulate button widgets
.SH SYNOPSIS
\fBbutton\fI \fIpathName \fR?\fIoptions\fR?
.SH "STANDARD OPTIONS"
.LP
.nf
.ta 3.8c 7.6c 11.4c
\fBactiveAttributes\fR	\fBattributes\fR	\fBdisabledForeground\fR	\fBtextVariable\fR
\fBactiveBackground\fR	\fBbackground\fR	\fBforeground\fR	\fBunderline\fR
\fBactiveForeground\fR	\fBdisabledAttributes\fR	\fBtakeFocus\fR	\fBunderlineAttributes\fR
\fBanchor\fR	\fBdisabledBackground\fR	\fBtext\fR	\fBunderlineForeground\fR
.fi
.LP
See the ``options'' manual entry for details on the standard options.
.SH "WIDGET-SPECIFIC OPTIONS"
.ta 4c
.LP
.nf
Name:	\fBcommand\fR
Class:	\fBCommand\fR
Command-Line Switch:	\fB\-command\fR
.fi
.IP
Specifies a Tcl command to associate with the button.  This command
is typically invoked when mouse button 1 is pressed over the button
window.
.LP
.nf
Name:	\fBheight\fR
Class:	\fBHeight\fR
Command-Line Switch:	\fB\-height\fR
.fi
.IP
Specifies a desired height for the button in screen lines.
If this option isn't specified, the button's desired height is 1 line.
.LP
.nf
Name:	\fBstate\fR
Class:	\fBState\fR
Command-Line Switch:	\fB\-state\fR
.fi
.IP
Specifies one of three states for the button:  \fBnormal\fR, \fBactive\fR,
or \fBdisabled\fR.  In normal state the button is displayed using the
\fBforeground\fR and \fBbackground\fR options.  The active state is
typically used when the input focus is in the button.  In active state
the button is displayed using the \fBactiveAttributes\fR,
\fBactiveForeground\fR and \fBactiveBackground\fR options.
Disabled state means that the button should be insensitive:
the default bindings will refuse to activate the widget and will ignore
mouse button presses. In this state the \fBdisabledAttributes\fR,
\fBdisabledForeground\fR and \fBdisabledBackground\fR options
determine how the button is displayed.
.LP
.nf
Name:	\fBwidth\fR
Class:	\fBWidth\fR
Command-Line Switch:	\fB\-width\fR
.fi
.IP
Specifies a desired width for the button in screen columns.
If this option isn't specified, the button's desired width is computed
from the size of the text being displayed in it.
.BE

.SH DESCRIPTION
.PP
The \fBbutton\fR command creates a new window (given by the
\fIpathName\fR argument) and makes it into a button widget.
Additional options, described above, may be specified on the command line
or in the option database to configure aspects of the button such as its
colors, attributes, and text. The \fBbutton\fR command returns its
\fIpathName\fR argument.  At the time this command is invoked,
there must not exist a window named \fIpathName\fR, but
\fIpathName\fR's parent must exist.
.PP
A button is a widget that displays a textual string, bitmap or image.
One of the characters may optionally be underlined using the
\fBunderline\fR, \fBunderlineAttributes\fR, and \fBunderlineForeground\fR
options. It can display itself in either of three different ways, according
to the \fBstate\fR option.
When a user invokes the button (e.g. by pressing mouse button 1 with the cursor
over the button), then the Tcl command specified in the \fB\-command\fR
option is invoked.

.SH "WIDGET COMMAND"
.PP
The \fBbutton\fR command creates a new Tcl command whose
name is \fIpathName\fR. This command may be used to invoke various
operations on the widget. It has the following general form:
.DS C
\fIpathName option \fR?\fIarg arg ...\fR?
.DE
\fIOption\fR and the \fIarg\fRs
determine the exact behavior of the command.  The following
commands are possible for button widgets:
.TP
\fIpathName \fBcget\fR \fIoption\fR
Returns the current value of the configuration option given
by \fIoption\fR.
\fIOption\fR may have any of the values accepted by the \fBbutton\fR
command.
.TP
\fIpathName \fBconfigure\fR ?\fIoption\fR? ?\fIvalue option value ...\fR?
Query or modify the configuration options of the widget.
If no \fIoption\fR is specified, returns a list describing all of
the available options for \fIpathName\fR. If \fIoption\fR is specified
with no \fIvalue\fR, then the command returns a list describing the
one named option (this list will be identical to the corresponding
sublist of the value returned if no \fIoption\fR is specified).  If
one or more \fIoption\-value\fR pairs are specified, then the command
modifies the given widget option(s) to have the given value(s);  in
this case the command returns an empty string.
\fIOption\fR may have any of the values accepted by the \fBbutton\fR
command.
.TP
\fIpathName \fBinvoke\fR
Invoke the Tcl command associated with the button, if there is one.
The return value is the return value from the Tcl command, or an
empty string if there is no command associated with the button.
This command is ignored if the button's state is \fBdisabled\fR.

.SH "DEFAULT BINDINGS"
.PP
Ck automatically creates class bindings for buttons that give them
the following default behavior:
.IP [1]
A button activates whenever it gets the input focus and deactivates
whenever it loses the input focus.
.IP [2]
If mouse button 1 is pressed over a button, the button is invoked.
.IP [3]
When a button has the input focus, the space or return key cause the
button to be invoked.
.PP
If the button's state is \fBdisabled\fR then none of the above
actions occur:  the button is completely non-responsive.
.PP
The behavior of buttons can be changed by defining new bindings for
individual widgets or by redefining the class bindings.

.SH KEYWORDS
button, widget
